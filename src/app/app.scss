// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}


// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}


// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.1.
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767px
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);
}


// Creates text alignment classes based on screen size
// TODO this would be nice to add to the framework
@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
    // Provide text `[text-{bp}]` attributes for aligning text based on screen size
    [text#{$infix}-center] {
      text-align: center;
    }

    [text#{$infix}-left] {
      text-align: left;
    }

    [text#{$infix}-right] {
      text-align: right;
    }

    [hidden#{$infix}-up] {
      display: none;
    }
  }

  @include media-breakpoint-down($breakpoint, $grid-breakpoints) {
    [hidden#{$infix}-down] {
      display: none;
    }
  }
}


/* layout */
body {
    background: $background-color;
    min-width: 320px;
}
ion-app {
    background: url('../assets/img/bg.png') no-repeat top center;
    background-size: cover;
}

// fonts


// Headers
ion-header {
    background: $background-color url('../assets/img/headers_bg.png') no-repeat bottom center;
    background-size: cover;
    height: 80px;
    overflow: hidden;
}
ion-header ion-title {
    text-align: center;
}
ion-header ion-title img {
    max-width: 100%;
    min-width: 290px;
    min-height: 80px;
    max-height: 80px;
}
ion-header.header-ios {
    padding-top: 0;
}
ion-header ion-navbar.nwallet-start {
    background: $background-color url('../assets/img/title_nwallet.png') no-repeat center center;
    background-size: contain;
    max-width: 100%;
    min-width: 290px;
    min-height: 80px !important;
    max-height: 80px;
}

// Tabs
ion-tabs .tabbar .tab-button {
    padding: 0 !important;
}
a.tab-button:hover{
    opacity: 1 !important;
}
.tab-button .tab-button-icon.icon{
    padding: 0;
    margin: 0;
}
.tabs-ios[tabsLayout=title-hide] .tab-button, .tabs-ios .tab-button.icon-only{
    min-height: $tabs-tab-min-height;
}
#tab-t0-2{
    overflow: visible;
    min-width: 102px !important;
}
#tab-t0-0,
#tab-t0-1,
#tab-t0-3,
#tab-t0-4{
    min-width: 44px !important;
}
.ion-ios-nwallet-home,
.ion-ios-nwallet-home-outline,
.ion-md-nwallet-home {
    position: absolute;
    top: -10px;
    width: 102px !important;
    height: 79px !important;
    background: $background-color url('../assets/img/tabs_icons_wallet_off.png') no-repeat;
    background-size: cover;
}
.ion-ios-nwallet-transfer,
.ion-ios-nwallet-transfer-outline,
.ion-md-nwallet-transfer {
    width: 40px !important;
    height: 40px !important;
    background: $background-color url('../assets/img/tabs_icons_transfer_off.png') no-repeat;
    background-size: cover;
}
.ion-ios-nwallet-buy,
.ion-ios-nwallet-buy-outline,
.ion-md-nwallet-buy {
    width: 44px !important;
    height: 48px !important;
    background: $background-color url('../assets/img/tabs_icons_buy_off.png') no-repeat;
    background-size: cover;
}
.ion-ios-nwallet-loan,
.ion-ios-nwallet-loan-outline,
.ion-md-nwallet-loan {
    width: 44px !important;
    height: 40px !important;
    background: $background-color url('../assets/img/tabs_icons_loan_off.png') no-repeat;
    background-size: cover;
}
.ion-ios-nwallet-account,
.ion-ios-nwallet-account-outline,
.ion-md-nwallet-account {
    width: 39px !important;
    height: 40px !important;
    background: $background-color url('../assets/img/tabs_icons_account_off.png') no-repeat;
    background-size: cover;
}

#tab-t0-0.tab-button[aria-selected=true],
#tab-t0-1.tab-button[aria-selected=true],
#tab-t0-3.tab-button[aria-selected=true],
#tab-t0-4.tab-button[aria-selected=true] {
    background: rgba(0, 0, 0, 0.5);
}
#tab-t0-2.tab-button[aria-selected=true] .ion-ios-nwallet-home,
#tab-t0-2.tab-button[aria-selected=true] .ion-ios-nwallet-home-outline,
#tab-t0-2.tab-button[aria-selected=true] .ion-md-nwallet-home {
    position: absolute;
    top: -10px;
    width: 102px !important;
    height: 79px !important;
    background: $background-color url('../assets/img/tabs_icons_wallet_on.png') no-repeat;
    background-size: cover;
}
#tab-t0-0.tab-button[aria-selected=true] .ion-ios-nwallet-transfer,
#tab-t0-0.tab-button[aria-selected=true] .ion-ios-nwallet-transfer-outline,
#tab-t0-0.tab-button[aria-selected=true] .ion-md-nwallet-transfer {
    width: 40px !important;
    height: 40px !important;
    background: $background-color url('../assets/img/tabs_icons_transfer_on.png') no-repeat;
    background-size: cover;
}
#tab-t0-1.tab-button[aria-selected=true] .ion-ios-nwallet-buy,
#tab-t0-1.tab-button[aria-selected=true] .ion-ios-nwallet-buy-outline,
#tab-t0-1.tab-button[aria-selected=true] .ion-md-nwallet-buy {
    width: 44px !important;
    height: 48px !important;
    background: $background-color url('../assets/img/tabs_icons_buy_on.png') no-repeat;
    background-size: cover;
}
#tab-t0-3.tab-button[aria-selected=true] .ion-ios-nwallet-loan,
#tab-t0-3.tab-button[aria-selected=true] .ion-ios-nwallet-loan-outline,
#tab-t0-3.tab-button[aria-selected=true] .ion-md-nwallet-loan {
    width: 44px !important;
    height: 40px !important;
    background: $background-color url('../assets/img/tabs_icons_loan_on.png') no-repeat;
    background-size: cover;
}
#tab-t0-4.tab-button[aria-selected=true] .ion-ios-nwallet-account,
#tab-t0-4.tab-button[aria-selected=true] .ion-ios-nwallet-account-outline,
#tab-t0-4.tab-button[aria-selected=true] .ion-md-nwallet-account {
    width: 39px !important;
    height: 40px !important;
    background: $background-color url('../assets/img/tabs_icons_account_on.png') no-repeat;
    background-size: cover;
}


// paging bullet
.swiper-pagination-bullet{
    background: #fff;
    opacity: 0.3;
}
.swiper-pagination-bullet-active {
    background: #fff;
    opacity: 1;
}


// buttons
.btn {
    border: 0;
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    border-radius: 5px;
    margin-bottom: 10px;
}
.btn.default {
    background: #49413a;
    -webkit-box-shadow: #736961 0 1px 0 inset;
    -moz-box-shadow: #736961 0 1px 0 inset;
    box-shadow: #736961 0 1px 0 inset;
}
.btn.default h3,
.btn.default span {
    color: #d8d5d1;
    font-weight: 500;
}


// ionic buttons
.bar-button-default-ios,
.bar-button-default.bar-button-ios-default,
.bar-button-clear-ios-default,
.bar-button-default-md,
.bar-button-clear-md-default,
.bar-button-md-default,
.bar-button-default-wp,
.bar-button-clear-wp-default,
.bar-button-wp-default {
    color: #97866f;
    position: absolute;
    left: 5px;
}


// ios list
.list-ios > .item-block:first-child {
    border-top: 0;
}
.list-ios > .item-block:last-child,
.list-ios > .item-wrapper:last-child .item-block {
    border-bottom: 0;
}


// toolbar
.toolbar-title-wp,
.toolbar-title-md{
    padding: 0;
}


// item block
.item-ios,
.item-md,
.item-wp {
    background: transparent;
}
.item-ios.item-block .item-inner,
.item-md.item-block .item-inner,
.item-wp.item-block .item-inner {
    border: 0;
}


// form element
.text-input {
    border-left: 0;
    border-right: 0;
    border-top: 0;
    border-bottom: #f6f6f6 1px solid;
    background: -webkit-linear-gradient(0deg, #ddddde 0, #eae7e2 100%);
    background: -moz-linear-gradient(90deg, #ddddde 0, #eae7e2 100%);
    background: linear-gradient(90deg, #ddddde 0, #eae7e2 100%);
    color: color($colors, dark);
}
.text-input-ios,
.text-input-md,
.text-input-wp {
    padding: 4px 8px;
}

.item-input-has-focus .label-md[stacked],
.input-has-focus .label-md[stacked],
.item-input-has-focus .label-md[floating],
.input-has-focus .label-md[floating],
.item-input-has-focus .label-wp[stacked],
.input-has-focus .label-wp[stacked],
.item-input-has-focus .label-wp[floating],
.input-has-focus .label-wp[floating] {
    color: color($colors, title-second);
}

.item-md.item-input.item-input-has-focus .item-inner,
.item-md.item-input.input-has-focus .item-inner,
.item-md.item-input.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus) .item-inner,
.list-md .item-input.item-input-has-focus:last-child,
.list-md .item-input.input-has-focus:last-child,
.list-md .item-input.item-input-has-focus:last-child .item-inner,
.list-md .item-input.input-has-focus:last-child .item-inner,
.item-md.item-input.ng-valid.item-input-has-value:not(.input-has-focus):not(.item-input-has-focus) .item-inner,
.item-md.item-input.ng-valid.input-has-value:not(.input-has-focus):not(.item-input-has-focus) .item-inner,
.list-md .item-input.ng-valid.item-input-has-value:not(.input-has-focus):not(.item-input-has-focus):last-child,
.list-md .item-input.ng-valid.input-has-value:not(.input-has-focus):not(.item-input-has-focus):last-child,
.list-md .item-input.ng-valid.item-input-has-value:not(.input-has-focus):not(.item-input-has-focus):last-child .item-inner,
.list-md .item-input.ng-valid.input-has-value:not(.input-has-focus):not(.item-input-has-focus):last-child .item-inner,
.item-ios.item-input.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus) .item-inner,
.item-md.item-input.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus) .item-inner,
.item-wp.item-input.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus) .item-inner,
.list-ios .item-input.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus):last-child,
.list-md .item-input.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus):last-child,
.list-wp .item-input.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus):last-child,
.list-ios .item-input.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus):last-child .item-inner,
.list-md .item-input.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus):last-child .item-inner,
.list-wp .item-input.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus):last-child .item-inner {
    border-bottom: 0;
    -webkit-box-shadow: none;
    box-shadow: none;
}

.item-ios.item-input.item-input-has-focus .text-input,
.item-ios.item-input.input-has-focus .text-input,
.item-md.item-input.item-input-has-focus .text-input,
.item-md.item-input.input-has-focus .text-input,
.item-wp.item-input.item-input-has-focus .text-input,
.item-wp.item-input.input-has-focus .text-input {
    border-color: #fff;
}

.item-ios.item-input.ng-valid.item-input-has-value:not(.input-has-focus):not(.item-input-has-focus) .text-input,
.item-ios.item-input.ng-valid.input-has-value:not(.input-has-focus):not(.item-input-has-focus) .text-input,
.item-md.item-input.ng-valid.item-input-has-value:not(.input-has-focus):not(.item-input-has-focus) .text-input,
.item-md.item-input.ng-valid.input-has-value:not(.input-has-focus):not(.item-input-has-focus) .text-input,
.item-wp.item-input.ng-valid.item-input-has-value:not(.input-has-focus):not(.item-input-has-focus) .text-input,
.item-wp.item-input.ng-valid.input-has-value:not(.input-has-focus):not(.item-input-has-focus) .text-input {
    border-color: #32db64;
}
.item-ios.item-input.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus) .text-input,
.item-md.item-input.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus) .text-input,
.item-wp.item-input.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus) .text-input {
    border-color: color($colors, danger);
}

